# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto.system_pb2 as system__pb2


class systemStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getSystemConfig = channel.unary_unary(
                '/system/getSystemConfig',
                request_serializer=system__pb2.SystemRequest.SerializeToString,
                response_deserializer=system__pb2.SystemResponse.FromString,
                )
        self.updateSystemConfig = channel.unary_unary(
                '/system/updateSystemConfig',
                request_serializer=system__pb2.ConfigDto.SerializeToString,
                response_deserializer=system__pb2.SystemResponse.FromString,
                )
        self.sendEmail = channel.unary_unary(
                '/system/sendEmail',
                request_serializer=system__pb2.EmailDto.SerializeToString,
                response_deserializer=system__pb2.SystemResponse.FromString,
                )


class systemServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getSystemConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateSystemConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_systemServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getSystemConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.getSystemConfig,
                    request_deserializer=system__pb2.SystemRequest.FromString,
                    response_serializer=system__pb2.SystemResponse.SerializeToString,
            ),
            'updateSystemConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.updateSystemConfig,
                    request_deserializer=system__pb2.ConfigDto.FromString,
                    response_serializer=system__pb2.SystemResponse.SerializeToString,
            ),
            'sendEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.sendEmail,
                    request_deserializer=system__pb2.EmailDto.FromString,
                    response_serializer=system__pb2.SystemResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'system', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class system(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getSystemConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/system/getSystemConfig',
            system__pb2.SystemRequest.SerializeToString,
            system__pb2.SystemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateSystemConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/system/updateSystemConfig',
            system__pb2.ConfigDto.SerializeToString,
            system__pb2.SystemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sendEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/system/sendEmail',
            system__pb2.EmailDto.SerializeToString,
            system__pb2.SystemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
