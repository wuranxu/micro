# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: testcase.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0etestcase.proto\"\x83\x01\n\x0fListTestCaseDto\x12\x19\n\x0c\x64irectory_id\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x11\n\x04name\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\x18\n\x0b\x63reate_user\x18\x03 \x01(\x05H\x02\x88\x01\x01\x42\x0f\n\r_directory_idB\x07\n\x05_nameB\x0e\n\x0c_create_user\"\xdb\x02\n\rTestCaseModel\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x12\n\ncreated_at\x18\x02 \x01(\t\x12\x12\n\nupdated_at\x18\x03 \x01(\t\x12\x13\n\x0b\x63reate_user\x18\x04 \x01(\x05\x12\x13\n\x0bupdate_user\x18\x05 \x01(\x05\x12\x0c\n\x04name\x18\x06 \x01(\t\x12\x14\n\x0crequest_type\x18\x07 \x01(\x05\x12\x0b\n\x03url\x18\x08 \x01(\t\x12\x16\n\x0erequest_method\x18\t \x01(\t\x12\x17\n\x0frequest_headers\x18\n \x01(\t\x12\x11\n\tbase_path\x18\x0b \x01(\t\x12\x0c\n\x04\x62ody\x18\x0c \x01(\t\x12\x11\n\tbody_type\x18\r \x01(\x05\x12\x14\n\x0c\x64irectory_id\x18\x0e \x01(\x05\x12\x0b\n\x03tag\x18\x0f \x01(\t\x12\x0e\n\x06status\x18\x10 \x01(\x05\x12\x10\n\x08priority\x18\x11 \x01(\t\x12\x11\n\tcase_type\x18\x12 \x01(\x05\"O\n\x14ListTestCaseResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x1c\n\x04\x64\x61ta\x18\x03 \x03(\x0b\x32\x0e.TestCaseModel\"\xf6\x03\n\x0bTestCaseDto\x12\x0f\n\x02id\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x10\n\x08priority\x18\x02 \x01(\t\x12\x10\n\x03url\x18\x03 \x01(\tH\x01\x88\x01\x01\x12\x11\n\x04name\x18\x04 \x01(\tH\x02\x88\x01\x01\x12\x16\n\tcase_type\x18\x05 \x01(\x05H\x03\x88\x01\x01\x12\x16\n\tbase_path\x18\x06 \x01(\tH\x04\x88\x01\x01\x12\x10\n\x03tag\x18\x07 \x01(\tH\x05\x88\x01\x01\x12\x11\n\x04\x62ody\x18\x08 \x01(\tH\x06\x88\x01\x01\x12\x16\n\tbody_type\x18\t \x01(\x05H\x07\x88\x01\x01\x12\x1c\n\x0frequest_headers\x18\n \x01(\tH\x08\x88\x01\x01\x12\x1b\n\x0erequest_method\x18\x0b \x01(\tH\t\x88\x01\x01\x12\x13\n\x06status\x18\x0c \x01(\x05H\n\x88\x01\x01\x12\x14\n\x0c\x64irectory_id\x18\r \x01(\x05\x12\x14\n\x0crequest_type\x18\x0e \x01(\x05\x12\x31\n\x0eout_parameters\x18\x0f \x03(\x0b\x32\x19.TestCaseOutParametersDtoB\x05\n\x03_idB\x06\n\x04_urlB\x07\n\x05_nameB\x0c\n\n_case_typeB\x0c\n\n_base_pathB\x06\n\x04_tagB\x07\n\x05_bodyB\x0c\n\n_body_typeB\x12\n\x10_request_headersB\x11\n\x0f_request_methodB\t\n\x07_status\"\xb2\x01\n\x18TestCaseOutParametersDto\x12\x0f\n\x02id\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x17\n\nexpression\x18\x03 \x01(\tH\x01\x88\x01\x01\x12\x18\n\x0bmatch_index\x18\x04 \x01(\tH\x02\x88\x01\x01\x12\x13\n\x06source\x18\x05 \x01(\x05H\x03\x88\x01\x01\x42\x05\n\x03_idB\r\n\x0b_expressionB\x0e\n\x0c_match_indexB\t\n\x07_source\"e\n\x1dTestCaseOutParametersResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12)\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x1b.TestCaseOutParametersModel\"D\n\x19InsertTestCaseResponseDto\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0c\n\x04\x64\x61ta\x18\x02 \x01(\x05\x12\x0b\n\x03msg\x18\x03 \x01(\t\"\xaa\x01\n\x12TestCaseAssertsDto\x12\x0f\n\x02id\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x14\n\x07\x63\x61se_id\x18\x03 \x01(\x05H\x01\x88\x01\x01\x12\x18\n\x0b\x61ssert_type\x18\x04 \x01(\tH\x02\x88\x01\x01\x12\x10\n\x08\x65xpected\x18\x05 \x01(\t\x12\x10\n\x08\x61\x63tually\x18\x06 \x01(\tB\x05\n\x03_idB\n\n\x08_case_idB\x0e\n\x0c_assert_type\"y\n\x0fTestCaseDataDto\x12\x0f\n\x02id\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x14\n\x07\x63\x61se_id\x18\x02 \x01(\x05H\x01\x88\x01\x01\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x11\n\tjson_data\x18\x04 \x01(\t\x12\x0b\n\x03\x65nv\x18\x05 \x01(\x05\x42\x05\n\x03_idB\n\n\x08_case_id\"\xaa\x02\n\x0e\x43onstructorDto\x12\x0f\n\x02id\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x12\n\x05value\x18\x02 \x01(\tH\x01\x88\x01\x01\x12\x11\n\x04type\x18\x03 \x01(\x05H\x02\x88\x01\x01\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x12\n\x05index\x18\x05 \x01(\x05H\x03\x88\x01\x01\x12\x18\n\x10\x63onstructor_json\x18\x06 \x01(\t\x12\x13\n\x06\x65nable\x18\x07 \x01(\x08H\x04\x88\x01\x01\x12\x14\n\x07\x63\x61se_id\x18\x08 \x01(\x05H\x05\x88\x01\x01\x12\x13\n\x06public\x18\t \x01(\x08H\x06\x88\x01\x01\x12\x13\n\x06suffix\x18\n \x01(\x08H\x07\x88\x01\x01\x42\x05\n\x03_idB\x08\n\x06_valueB\x07\n\x05_typeB\x08\n\x06_indexB\t\n\x07_enableB\n\n\x08_case_idB\t\n\x07_publicB\t\n\x07_suffix\"\xb4\x01\n\x0fTestCaseInfoDto\x12\x1f\n\x04\x63\x61se\x18\x01 \x01(\x0b\x32\x0c.TestCaseDtoH\x00\x88\x01\x01\x12$\n\x07\x61sserts\x18\x02 \x03(\x0b\x32\x13.TestCaseAssertsDto\x12\x1e\n\x04\x64\x61ta\x18\x03 \x03(\x0b\x32\x10.TestCaseDataDto\x12\x31\n\x0eout_parameters\x18\x04 \x03(\x0b\x32\x19.TestCaseOutParametersDtoB\x07\n\x05_case\"I\n\x10TestCaseResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x11\n\x04\x64\x61ta\x18\x03 \x01(\x0cH\x00\x88\x01\x01\x42\x07\n\x05_data\"&\n\x0fTestCaseRequest\x12\x13\n\x0brequestJson\x18\x01 \x01(\x0c\"F\n\x14QueryTestCaseDirTree\x12\x12\n\nproject_id\x18\x01 \x01(\x05\x12\x11\n\x04move\x18\x02 \x01(\x08H\x00\x88\x01\x01\x42\x07\n\x05_move\"(\n\x10QueryTestCaseDir\x12\x14\n\x0c\x64irectory_id\x18\x01 \x01(\x05\"o\n\x0cTestCaseTree\x12\r\n\x05title\x18\x01 \x01(\t\x12\x0b\n\x03key\x18\x02 \x01(\t\x12\x15\n\x08\x64isabled\x18\x03 \x01(\x08H\x00\x88\x01\x01\x12\x1f\n\x08\x63hildren\x18\x04 \x03(\x0b\x32\r.TestCaseTreeB\x0b\n\t_disabled\"V\n\x1cQueryTestCaseDirTreeResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x1b\n\x04\x64\x61ta\x18\x03 \x03(\x0b\x32\r.TestCaseTree\"\xb8\x01\n\x16TestCaseDirectoryModel\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x12\n\ncreated_at\x18\x02 \x01(\t\x12\x12\n\nupdated_at\x18\x03 \x01(\t\x12\x13\n\x0b\x63reate_user\x18\x04 \x01(\x05\x12\x13\n\x0bupdate_user\x18\x05 \x01(\x05\x12\x12\n\nproject_id\x18\x06 \x01(\x05\x12\x0c\n\x04name\x18\x07 \x01(\t\x12\x13\n\x06parent\x18\x08 \x01(\x05H\x00\x88\x01\x01\x42\t\n\x07_parent\"e\n!QueryTestCaseDirectoryResponseDto\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12%\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x17.TestCaseDirectoryModel\"#\n\x10QueryTestCaseDto\x12\x0f\n\x07\x63\x61se_id\x18\x01 \x01(\x05\"\xcc\x01\n\x14TestCaseAssertsModel\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x12\n\ncreated_at\x18\x02 \x01(\t\x12\x12\n\nupdated_at\x18\x03 \x01(\t\x12\x13\n\x0b\x63reate_user\x18\x04 \x01(\x05\x12\x13\n\x0bupdate_user\x18\x05 \x01(\x05\x12\x13\n\x0b\x61ssert_type\x18\x06 \x01(\t\x12\x0c\n\x04name\x18\x07 \x01(\t\x12\x0f\n\x07\x63\x61se_id\x18\x08 \x01(\x05\x12\x10\n\x08\x65xpected\x18\t \x01(\t\x12\x10\n\x08\x61\x63tually\x18\n \x01(\t\"\x9c\x02\n\x18TestCaseConstructorModel\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x12\n\ncreated_at\x18\x02 \x01(\t\x12\x12\n\nupdated_at\x18\x03 \x01(\t\x12\x13\n\x0b\x63reate_user\x18\x04 \x01(\x05\x12\x13\n\x0bupdate_user\x18\x05 \x01(\x05\x12\x0c\n\x04type\x18\x06 \x01(\x05\x12\x0c\n\x04name\x18\x07 \x01(\t\x12\x0e\n\x06\x65nable\x18\x08 \x01(\x08\x12\x18\n\x10\x63onstructor_json\x18\t \x01(\t\x12\x12\n\x05value\x18\n \x01(\tH\x00\x88\x01\x01\x12\x0f\n\x07\x63\x61se_id\x18\x0b \x01(\x05\x12\x0e\n\x06public\x18\x0c \x01(\x08\x12\r\n\x05index\x18\r \x01(\x05\x12\x0e\n\x06suffix\x18\x0e \x01(\x08\x42\x08\n\x06_value\"\xb0\x01\n\x11TestCaseDataModel\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x12\n\ncreated_at\x18\x02 \x01(\t\x12\x12\n\nupdated_at\x18\x03 \x01(\t\x12\x13\n\x0b\x63reate_user\x18\x04 \x01(\x05\x12\x13\n\x0bupdate_user\x18\x05 \x01(\x05\x12\x0b\n\x03\x65nv\x18\x06 \x01(\x05\x12\x0f\n\x07\x63\x61se_id\x18\x07 \x01(\x05\x12\x0c\n\x04name\x18\x08 \x01(\t\x12\x11\n\tjson_data\x18\t \x01(\t\"\xfb\x01\n\x1aTestCaseOutParametersModel\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x12\n\ncreated_at\x18\x02 \x01(\t\x12\x12\n\nupdated_at\x18\x03 \x01(\t\x12\x13\n\x0b\x63reate_user\x18\x04 \x01(\x05\x12\x13\n\x0bupdate_user\x18\x05 \x01(\x05\x12\x0e\n\x06source\x18\x06 \x01(\x05\x12\x0f\n\x07\x63\x61se_id\x18\x07 \x01(\x05\x12\x0c\n\x04name\x18\x08 \x01(\t\x12\x17\n\nexpression\x18\t \x01(\tH\x00\x88\x01\x01\x12\x18\n\x0bmatch_index\x18\n \x01(\tH\x01\x88\x01\x01\x42\r\n\x0b_expressionB\x0e\n\x0c_match_index\">\n\x15ListTestCaseDataModel\x12%\n\ttest_data\x18\x01 \x03(\x0b\x32\x12.TestCaseDataModel\"\xe0\x03\n\x18TestCaseFullResponseData\x12&\n\x07\x61sserts\x18\x01 \x03(\x0b\x32\x15.TestCaseAssertsModel\x12/\n\x0c\x63onstructors\x18\x02 \x03(\x0b\x32\x19.TestCaseConstructorModel\x12:\n\ttest_data\x18\x03 \x03(\x0b\x32\'.TestCaseFullResponseData.TestDataEntry\x12\x33\n\x0eout_parameters\x18\x04 \x03(\x0b\x32\x1b.TestCaseOutParametersModel\x12\x1c\n\x04\x63\x61se\x18\x05 \x01(\x0b\x32\x0e.TestCaseModel\x12J\n\x11\x63onstructors_case\x18\x06 \x03(\x0b\x32/.TestCaseFullResponseData.ConstructorsCaseEntry\x1aG\n\rTestDataEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12%\n\x05value\x18\x02 \x01(\x0b\x32\x16.ListTestCaseDataModel:\x02\x38\x01\x1aG\n\x15\x43onstructorsCaseEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\x1d\n\x05value\x18\x02 \x01(\x0b\x32\x0e.TestCaseModel:\x02\x38\x01\"^\n\x18QueryTestCaseResponseDto\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\'\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x19.TestCaseFullResponseData\"l\n\x12UpdateTestCaseData\x12!\n\tcase_info\x18\x01 \x01(\x0b\x32\x0e.TestCaseModel\x12\x33\n\x0eout_parameters\x18\x02 \x03(\x0b\x32\x1b.TestCaseOutParametersModel\"Y\n\x19UpdateTestCaseResponseDto\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12!\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x13.UpdateTestCaseData\"!\n\x11\x44\x65leteTestCaseDto\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x05\"\\\n\x1aTestCaseAssertsResponseDto\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12#\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x15.TestCaseAssertsModel\"\x17\n\tCustomDto\x12\n\n\x02id\x18\x01 \x01(\x05\"0\n\x13\x43onstructorIndexDto\x12\n\n\x02id\x18\x01 \x01(\x05\x12\r\n\x05index\x18\x02 \x01(\x05\"=\n\x17ListConstructorIndexDto\x12\"\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x14.ConstructorIndexDto\"E\n\x17QueryConstructorTreeDto\x12\x0e\n\x06suffix\x18\x01 \x01(\x08\x12\x11\n\x04name\x18\x02 \x01(\tH\x00\x88\x01\x01\x42\x07\n\x05_name\"\x93\x01\n\x0f\x43onstructorTree\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x15\n\x08\x64isabled\x18\x02 \x01(\x08H\x00\x88\x01\x01\x12\r\n\x05title\x18\x03 \x01(\t\x12\x12\n\x05value\x18\x04 \x01(\tH\x01\x88\x01\x01\x12\"\n\x08\x63hildren\x18\x05 \x03(\x0b\x32\x10.ConstructorTreeB\x0b\n\t_disabledB\x08\n\x06_value\"Y\n\x1cQueryConstructorTreeResponse\x12\x1e\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x10.ConstructorTree\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x0c\n\x04\x63ode\x18\x03 \x01(\x05\"^\n\x18QueryConstructorResponse\x12\'\n\x04\x64\x61ta\x18\x01 \x01(\x0b\x32\x19.TestCaseConstructorModel\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x0c\n\x04\x63ode\x18\x03 \x01(\x05\"h\n\x12ListConstructorDto\x12\x1d\n\x10\x63onstructor_type\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x13\n\x06suffix\x18\x02 \x01(\x08H\x01\x88\x01\x01\x42\x13\n\x11_constructor_typeB\t\n\x07_suffix\"\xd9\x01\n\x17\x43onstructorResponseTree\x12\r\n\x05title\x18\x01 \x01(\t\x12\x0b\n\x03key\x18\x02 \x01(\t\x12\x1d\n\x10\x63onstructor_json\x18\x03 \x01(\tH\x00\x88\x01\x01\x12*\n\x08\x63hildren\x18\x04 \x03(\x0b\x32\x18.ConstructorResponseTree\x12\x13\n\x06isLeaf\x18\x05 \x01(\x08H\x01\x88\x01\x01\x12\x15\n\x08\x64isabled\x18\x06 \x01(\x08H\x02\x88\x01\x01\x42\x13\n\x11_constructor_jsonB\t\n\x07_isLeafB\x0b\n\t_disabled\"\\\n\x17ListConstructorResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12&\n\x04\x64\x61ta\x18\x03 \x03(\x0b\x32\x18.ConstructorResponseTree\"\x9a\x03\n\x0fTestReportModel\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x10\n\x08start_at\x18\x02 \x01(\t\x12\x13\n\x0b\x66inished_at\x18\x03 \x01(\t\x12\x13\n\x0b\x63reate_user\x18\x04 \x01(\x05\x12\x13\n\x0bupdate_user\x18\x05 \x01(\x05\x12\x10\n\x08\x65xecutor\x18\x06 \x01(\x05\x12\x0b\n\x03\x65nv\x18\x07 \x01(\x05\x12\x0c\n\x04\x63ost\x18\x08 \x01(\t\x12\x0f\n\x07plan_id\x18\t \x01(\x05\x12\x1a\n\rsuccess_count\x18\n \x01(\x05H\x00\x88\x01\x01\x12\x18\n\x0b\x65rror_count\x18\x0b \x01(\x05H\x01\x88\x01\x01\x12\x19\n\x0c\x66\x61iled_count\x18\x0c \x01(\x05H\x02\x88\x01\x01\x12\x1a\n\rskipped_count\x18\r \x01(\x05H\x03\x88\x01\x01\x12\x13\n\x06status\x18\x0e \x01(\x05H\x04\x88\x01\x01\x12\x11\n\x04mode\x18\x0f \x01(\x05H\x05\x88\x01\x01\x42\x10\n\x0e_success_countB\x0e\n\x0c_error_countB\x0f\n\r_failed_countB\x10\n\x0e_skipped_countB\t\n\x07_statusB\x07\n\x05_mode\"\xd5\x04\n\nTestResult\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x19\n\x0c\x64irectory_id\x18\x02 \x01(\x05H\x00\x88\x01\x01\x12\x16\n\treport_id\x18\x03 \x01(\x05H\x01\x88\x01\x01\x12\x14\n\x07\x63\x61se_id\x18\x04 \x01(\x05H\x02\x88\x01\x01\x12\x11\n\tcase_name\x18\x05 \x01(\t\x12\x13\n\x06status\x18\x06 \x01(\x05H\x03\x88\x01\x01\x12\x10\n\x08start_at\x18\x07 \x01(\t\x12\x13\n\x0b\x66inished_at\x18\x08 \x01(\t\x12\x10\n\x08\x63\x61se_log\x18\t \x01(\t\x12\x12\n\x05retry\x18\n \x01(\x05H\x04\x88\x01\x01\x12\x0b\n\x03url\x18\x0b \x01(\t\x12\x11\n\x04\x62ody\x18\x0c \x01(\tH\x05\x88\x01\x01\x12\x1b\n\x0erequest_params\x18\r \x01(\tH\x06\x88\x01\x01\x12\x16\n\tdata_name\x18\x0e \x01(\tH\x07\x88\x01\x01\x12\x14\n\x07\x64\x61ta_id\x18\x0f \x01(\x05H\x08\x88\x01\x01\x12\x16\n\x0erequest_method\x18\x10 \x01(\t\x12\x17\n\x0frequest_headers\x18\x11 \x01(\t\x12\x0c\n\x04\x63ost\x18\x12 \x01(\t\x12\x0f\n\x07\x61sserts\x18\x13 \x01(\t\x12\x18\n\x10response_headers\x18\x14 \x01(\t\x12\x10\n\x08response\x18\x15 \x01(\t\x12\x14\n\x07\x63ookies\x18\x16 \x01(\tH\t\x88\x01\x01\x42\x0f\n\r_directory_idB\x0c\n\n_report_idB\n\n\x08_case_idB\t\n\x07_statusB\x08\n\x06_retryB\x07\n\x05_bodyB\x11\n\x0f_request_paramsB\x0c\n\n_data_nameB\n\n\x08_data_idB\n\n\x08_cookies\"f\n\x0fQueryReportData\x12 \n\x06report\x18\x01 \x01(\x0b\x32\x10.TestReportModel\x12\x11\n\tplan_name\x18\x02 \x01(\t\x12\x1e\n\tcase_list\x18\x03 \x03(\x0b\x32\x0b.TestResult\"^\n\x13QueryReportResponse\x12\x11\n\x04\x63ode\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x1e\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x10.QueryReportDataB\x07\n\x05_code\"\x91\x01\n\rListReportDto\x12\x11\n\x04page\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x11\n\x04size\x18\x02 \x01(\x05H\x01\x88\x01\x01\x12\x12\n\nstart_time\x18\x03 \x01(\t\x12\x10\n\x08\x65nd_time\x18\x04 \x01(\t\x12\x15\n\x08\x65xecutor\x18\x05 \x01(\x05H\x02\x88\x01\x01\x42\x07\n\x05_pageB\x07\n\x05_sizeB\x0b\n\t_executor\"N\n\x0eListReportData\x12\x12\n\x05total\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x1e\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\x10.TestReportModelB\x08\n\x06_total\"N\n\x12ListReportResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x1d\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x0f.ListReportData\"N\n\x12QueryXmindResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x1d\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x0f.QueryXmindData\"v\n\x0eQueryXmindData\x12\r\n\x05label\x18\x01 \x01(\t\x12\x0b\n\x03key\x18\x02 \x01(\t\x12\r\n\x05title\x18\x03 \x01(\t\x12\x0f\n\x02id\x18\x04 \x01(\tH\x00\x88\x01\x01\x12!\n\x08\x63hildren\x18\x05 \x03(\x0b\x32\x0f.QueryXmindDataB\x05\n\x03_id\"%\n\x0fTestPlanCaseDto\x12\x12\n\nproject_id\x18\x01 \x01(\x05\"R\n\x14TestPlanTreeResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x1f\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x11.TestPlanTreeData\"\x91\x01\n\x10TestPlanTreeData\x12\x1b\n\x04tree\x18\x01 \x03(\x0b\x32\r.TestCaseTree\x12\x30\n\x08\x63\x61se_map\x18\x02 \x03(\x0b\x32\x1e.TestPlanTreeData.CaseMapEntry\x1a.\n\x0c\x43\x61seMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"j\n\x0eTestCaseDirDto\x12\x0f\n\x02id\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x12\n\nproject_id\x18\x03 \x01(\x05\x12\x13\n\x06parent\x18\x04 \x01(\x05H\x01\x88\x01\x01\x42\x05\n\x03_idB\t\n\x07_parent\"S\n\x14TestCaseDataResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12 \n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x12.TestCaseDataModel\"L\n\x0fMoveTestCaseDto\x12\x12\n\nproject_id\x18\x01 \x01(\x05\x12\x14\n\x0c\x64irectory_id\x18\x02 \x01(\x05\x12\x0f\n\x07id_list\x18\x03 \x03(\x05\"W\n\x1b\x42\x61tchUpdateOutParametersDto\x12\x0f\n\x07\x63\x61se_id\x18\x01 \x01(\x05\x12\'\n\x04\x64\x61ta\x18\x02 \x03(\x0b\x32\x19.TestCaseOutParametersDto\"h\n BatchUpdateOutParametersResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12)\n\x04\x64\x61ta\x18\x03 \x03(\x0b\x32\x1b.TestCaseOutParametersModel\"\xcc\x04\n\x0bRequestInfo\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x11\n\x04\x62ody\x18\x02 \x01(\tH\x00\x88\x01\x01\x12\x16\n\x0erequest_method\x18\x03 \x01(\t\x12\x39\n\x0frequest_headers\x18\x04 \x03(\x0b\x32 .RequestInfo.RequestHeadersEntry\x12;\n\x10response_headers\x18\x05 \x03(\x0b\x32!.RequestInfo.ResponseHeadersEntry\x12*\n\x07\x63ookies\x18\x06 \x03(\x0b\x32\x19.RequestInfo.CookiesEntry\x12\x39\n\x0frequest_cookies\x18\x07 \x03(\x0b\x32 .RequestInfo.RequestCookiesEntry\x12\x1d\n\x10response_content\x18\x08 \x01(\tH\x01\x88\x01\x01\x12\x13\n\x0bstatus_code\x18\t \x01(\x05\x1a\x35\n\x13RequestHeadersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x36\n\x14ResponseHeadersEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a.\n\x0c\x43ookiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1a\x35\n\x13RequestCookiesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\x07\n\x05_bodyB\x13\n\x11_response_content\"Z\n\x14TestCaseGeneratorDto\x12\x14\n\x0c\x64irectory_id\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x1e\n\x08requests\x18\x03 \x03(\x0b\x32\x0c.RequestInfo\"U\n\x18TestCaseGenerateResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x1e\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x10.TestCaseInfoDto\"G\n\rImportCaseDto\x12\x13\n\x0bimport_type\x18\x01 \x01(\x05\x12\x0f\n\x07\x63ontent\x18\x02 \x01(\t\x12\x10\n\x08\x66ilename\x18\x03 \x01(\t\"O\n\x16ImportTestCaseResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x1a\n\x04\x64\x61ta\x18\x03 \x03(\x0b\x32\x0c.RequestInfo\"\xdf\x01\n\x0fListTestPlanDto\x12\x0c\n\x04page\x18\x01 \x01(\x05\x12\x0c\n\x04size\x18\x02 \x01(\x05\x12\x17\n\nproject_id\x18\x03 \x01(\x05H\x00\x88\x01\x01\x12\x11\n\x04name\x18\x04 \x01(\tH\x01\x88\x01\x01\x12\x15\n\x08priority\x18\x05 \x01(\tH\x02\x88\x01\x01\x12\x18\n\x0b\x63reate_user\x18\x06 \x01(\x05H\x03\x88\x01\x01\x12\x13\n\x06\x66ollow\x18\x07 \x01(\x08H\x04\x88\x01\x01\x42\r\n\x0b_project_idB\x07\n\x05_nameB\x0b\n\t_priorityB\x0e\n\x0c_create_userB\t\n\x07_follow\"\xa7\x03\n\rTestPlanModel\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x12\n\ncreated_at\x18\x02 \x01(\t\x12\x12\n\nupdated_at\x18\x03 \x01(\t\x12\x13\n\x0b\x63reate_user\x18\x04 \x01(\x05\x12\x13\n\x0bupdate_user\x18\x05 \x01(\x05\x12\x12\n\nproject_id\x18\x06 \x01(\x05\x12\x0b\n\x03\x65nv\x18\x07 \x01(\t\x12\x0c\n\x04name\x18\x08 \x01(\t\x12\x10\n\x08priority\x18\t \x01(\t\x12\x0c\n\x04\x63ron\x18\n \x01(\t\x12\x11\n\tcase_list\x18\x0b \x01(\t\x12\x0f\n\x07ordered\x18\x0c \x01(\x08\x12\x11\n\tpass_rate\x18\r \x01(\x05\x12\x10\n\x08receiver\x18\x0e \x01(\t\x12\x10\n\x08msg_type\x18\x0f \x01(\t\x12\x1a\n\rretry_minutes\x18\x10 \x01(\x05H\x00\x88\x01\x01\x12\x12\n\x05state\x18\x11 \x01(\x05H\x01\x88\x01\x01\x12\x13\n\x06\x66ollow\x18\x12 \x01(\x08H\x02\x88\x01\x01\x12\x15\n\x08next_run\x18\x13 \x01(\tH\x03\x88\x01\x01\x42\x10\n\x0e_retry_minutesB\x08\n\x06_stateB\t\n\x07_followB\x0b\n\t_next_run\"?\n\x10ListTestPlanData\x12\x1c\n\x04\x64\x61ta\x18\x01 \x03(\x0b\x32\x0e.TestPlanModel\x12\r\n\x05total\x18\x02 \x01(\x05\"P\n\x14ListTestPlanResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\x1d\n\x04\x64\x61ta\x18\x03 \x01(\x0b\x32\x0f.ListReportData\"\x8a\x02\n\x0bTestPlanDto\x12\x0f\n\x02id\x18\x01 \x01(\x05H\x00\x88\x01\x01\x12\x12\n\nproject_id\x18\x02 \x01(\x05\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x10\n\x08priority\x18\x04 \x01(\t\x12\x0b\n\x03\x65nv\x18\x05 \x03(\x05\x12\x0c\n\x04\x63ron\x18\x06 \x01(\t\x12\x14\n\x07ordered\x18\x07 \x01(\x08H\x01\x88\x01\x01\x12\x11\n\tcase_list\x18\x08 \x03(\x05\x12\x16\n\tpass_rate\x18\t \x01(\x05H\x02\x88\x01\x01\x12\x10\n\x08receiver\x18\n \x03(\x05\x12\x10\n\x08msg_type\x18\x0b \x03(\x05\x12\x15\n\rretry_minutes\x18\x0c \x03(\x05\x42\x05\n\x03_idB\n\n\x08_orderedB\x0c\n\n_pass_rate\"?\n\x11SwitchTestPlanDto\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x13\n\x06status\x18\x02 \x01(\x08H\x00\x88\x01\x01\x42\t\n\x07_status\"U\n\x13QueryFollowPlanData\x12\x1c\n\x04plan\x18\x01 \x01(\x0b\x32\x0e.TestPlanModel\x12 \n\x06report\x18\x02 \x03(\x0b\x32\x10.TestReportModel\"X\n\x17QueryFollowPlanResponse\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03msg\x18\x02 \x01(\t\x12\"\n\x04\x64\x61ta\x18\x03 \x03(\x0b\x32\x14.QueryFollowPlanData2\x87\x17\n\x08testcase\x12\x39\n\x0clistTestCase\x12\x10.ListTestCaseDto\x1a\x15.ListTestCaseResponse\"\x00\x12<\n\x0einsertTestCase\x12\x0c.TestCaseDto\x1a\x1a.InsertTestCaseResponseDto\"\x00\x12\x37\n\x0e\x63reateTestCase\x12\x10.TestCaseInfoDto\x1a\x11.TestCaseResponse\"\x00\x12<\n\x0eupdateTestCase\x12\x0c.TestCaseDto\x1a\x1a.UpdateTestCaseResponseDto\"\x00\x12\x39\n\x0e\x64\x65leteTestCase\x12\x12.DeleteTestCaseDto\x1a\x11.TestCaseResponse\"\x00\x12?\n\rqueryTestCase\x12\x11.QueryTestCaseDto\x1a\x19.QueryTestCaseResponseDto\"\x00\x12\x35\n\x0cmoveTestCase\x12\x10.MoveTestCaseDto\x1a\x11.TestCaseResponse\"\x00\x12\x43\n\rinsertAsserts\x12\x13.TestCaseAssertsDto\x1a\x1b.TestCaseAssertsResponseDto\"\x00\x12\x43\n\rupdateAsserts\x12\x13.TestCaseAssertsDto\x1a\x1b.TestCaseAssertsResponseDto\"\x00\x12\x30\n\rdeleteAsserts\x12\n.CustomDto\x1a\x11.TestCaseResponse\"\x00\x12\x39\n\x11insertConstructor\x12\x0f.ConstructorDto\x1a\x11.TestCaseResponse\"\x00\x12\x39\n\x11updateConstructor\x12\x0f.ConstructorDto\x1a\x11.TestCaseResponse\"\x00\x12\x34\n\x11\x64\x65leteConstructor\x12\n.CustomDto\x1a\x11.TestCaseResponse\"\x00\x12\x43\n\x12reorderConstructor\x12\x18.ListConstructorIndexDto\x1a\x11.TestCaseResponse\"\x00\x12Q\n\x14queryConstructorTree\x12\x18.QueryConstructorTreeDto\x1a\x1d.QueryConstructorTreeResponse\"\x00\x12;\n\x10queryConstructor\x12\n.CustomDto\x1a\x19.QueryConstructorResponse\"\x00\x12\x42\n\x0flistConstructor\x12\x13.ListConstructorDto\x1a\x18.ListConstructorResponse\"\x00\x12\x35\n\x0fqueryTestReport\x12\n.CustomDto\x1a\x14.QueryReportResponse\"\x00\x12\x37\n\x0elistTestReport\x12\x0e.ListReportDto\x1a\x13.ListReportResponse\"\x00\x12\x33\n\x0equeryXmindData\x12\n.CustomDto\x1a\x13.QueryXmindResponse\"\x00\x12N\n\x14queryTestCaseDirTree\x12\x15.QueryTestCaseDirTree\x1a\x1d.QueryTestCaseDirTreeResponse\"\x00\x12>\n\x11queryTestCaseTree\x12\x10.TestPlanCaseDto\x1a\x15.TestPlanTreeResponse\"\x00\x12K\n\x10queryTestCaseDir\x12\x11.QueryTestCaseDir\x1a\".QueryTestCaseDirectoryResponseDto\"\x00\x12\x39\n\x11insertTestCaseDir\x12\x0f.TestCaseDirDto\x1a\x11.TestCaseResponse\"\x00\x12\x39\n\x11updateTestCaseDir\x12\x0f.TestCaseDirDto\x1a\x11.TestCaseResponse\"\x00\x12\x34\n\x11\x64\x65leteTestCaseDir\x12\n.CustomDto\x1a\x11.TestCaseResponse\"\x00\x12;\n\x0einsertTestData\x12\x10.TestCaseDataDto\x1a\x15.TestCaseDataResponse\"\x00\x12;\n\x0eupdateTestData\x12\x10.TestCaseDataDto\x1a\x15.TestCaseDataResponse\"\x00\x12\x31\n\x0e\x64\x65leteTestData\x12\n.CustomDto\x1a\x11.TestCaseResponse\"\x00\x12K\n\x0cinsertParams\x12\x19.TestCaseOutParametersDto\x1a\x1e.TestCaseOutParametersResponse\"\x00\x12K\n\x0cupdateParams\x12\x19.TestCaseOutParametersDto\x1a\x1e.TestCaseOutParametersResponse\"\x00\x12V\n\x11\x62\x61tchUpdateParams\x12\x1c.BatchUpdateOutParametersDto\x1a!.BatchUpdateOutParametersResponse\"\x00\x12/\n\x0c\x64\x65leteParams\x12\n.CustomDto\x1a\x11.TestCaseResponse\"\x00\x12\x34\n\x0bstartRecord\x12\x10.TestCaseRequest\x1a\x11.TestCaseResponse\"\x00\x12\x33\n\nstopRecord\x12\x10.TestCaseRequest\x1a\x11.TestCaseResponse\"\x00\x12\x35\n\x0cremoveRecord\x12\x10.TestCaseRequest\x1a\x11.TestCaseResponse\"\x00\x12:\n\x11queryRecordStatus\x12\x10.TestCaseRequest\x1a\x11.TestCaseResponse\"\x00\x12\x46\n\x10generateTestCase\x12\x15.TestCaseGeneratorDto\x1a\x19.TestCaseGenerateResponse\"\x00\x12;\n\x0eimportTestCase\x12\x0e.ImportCaseDto\x1a\x17.ImportTestCaseResponse\"\x00\x12\x39\n\x0clistTestPlan\x12\x10.ListTestPlanDto\x1a\x15.ListTestPlanResponse\"\x00\x12\x33\n\x0einsertTestPlan\x12\x0c.TestPlanDto\x1a\x11.TestCaseResponse\"\x00\x12\x33\n\x0eupdateTestPlan\x12\x0c.TestPlanDto\x1a\x11.TestCaseResponse\"\x00\x12\x31\n\x0e\x64\x65leteTestPlan\x12\n.CustomDto\x1a\x11.TestCaseResponse\"\x00\x12\x39\n\x0eswitchTestPlan\x12\x12.SwitchTestPlanDto\x1a\x11.TestCaseResponse\"\x00\x12\x32\n\x0f\x65xecuteTestPlan\x12\n.CustomDto\x1a\x11.TestCaseResponse\"\x00\x12\x31\n\x0e\x66ollowTestPlan\x12\n.CustomDto\x1a\x11.TestCaseResponse\"\x00\x12\x33\n\x10unFollowTestPlan\x12\n.CustomDto\x1a\x11.TestCaseResponse\"\x00\x12G\n\x17queryUserFollowTestPlan\x12\x10.TestCaseRequest\x1a\x18.QueryFollowPlanResponse\"\x00\x62\x06proto3')



_LISTTESTCASEDTO = DESCRIPTOR.message_types_by_name['ListTestCaseDto']
_TESTCASEMODEL = DESCRIPTOR.message_types_by_name['TestCaseModel']
_LISTTESTCASERESPONSE = DESCRIPTOR.message_types_by_name['ListTestCaseResponse']
_TESTCASEDTO = DESCRIPTOR.message_types_by_name['TestCaseDto']
_TESTCASEOUTPARAMETERSDTO = DESCRIPTOR.message_types_by_name['TestCaseOutParametersDto']
_TESTCASEOUTPARAMETERSRESPONSE = DESCRIPTOR.message_types_by_name['TestCaseOutParametersResponse']
_INSERTTESTCASERESPONSEDTO = DESCRIPTOR.message_types_by_name['InsertTestCaseResponseDto']
_TESTCASEASSERTSDTO = DESCRIPTOR.message_types_by_name['TestCaseAssertsDto']
_TESTCASEDATADTO = DESCRIPTOR.message_types_by_name['TestCaseDataDto']
_CONSTRUCTORDTO = DESCRIPTOR.message_types_by_name['ConstructorDto']
_TESTCASEINFODTO = DESCRIPTOR.message_types_by_name['TestCaseInfoDto']
_TESTCASERESPONSE = DESCRIPTOR.message_types_by_name['TestCaseResponse']
_TESTCASEREQUEST = DESCRIPTOR.message_types_by_name['TestCaseRequest']
_QUERYTESTCASEDIRTREE = DESCRIPTOR.message_types_by_name['QueryTestCaseDirTree']
_QUERYTESTCASEDIR = DESCRIPTOR.message_types_by_name['QueryTestCaseDir']
_TESTCASETREE = DESCRIPTOR.message_types_by_name['TestCaseTree']
_QUERYTESTCASEDIRTREERESPONSE = DESCRIPTOR.message_types_by_name['QueryTestCaseDirTreeResponse']
_TESTCASEDIRECTORYMODEL = DESCRIPTOR.message_types_by_name['TestCaseDirectoryModel']
_QUERYTESTCASEDIRECTORYRESPONSEDTO = DESCRIPTOR.message_types_by_name['QueryTestCaseDirectoryResponseDto']
_QUERYTESTCASEDTO = DESCRIPTOR.message_types_by_name['QueryTestCaseDto']
_TESTCASEASSERTSMODEL = DESCRIPTOR.message_types_by_name['TestCaseAssertsModel']
_TESTCASECONSTRUCTORMODEL = DESCRIPTOR.message_types_by_name['TestCaseConstructorModel']
_TESTCASEDATAMODEL = DESCRIPTOR.message_types_by_name['TestCaseDataModel']
_TESTCASEOUTPARAMETERSMODEL = DESCRIPTOR.message_types_by_name['TestCaseOutParametersModel']
_LISTTESTCASEDATAMODEL = DESCRIPTOR.message_types_by_name['ListTestCaseDataModel']
_TESTCASEFULLRESPONSEDATA = DESCRIPTOR.message_types_by_name['TestCaseFullResponseData']
_TESTCASEFULLRESPONSEDATA_TESTDATAENTRY = _TESTCASEFULLRESPONSEDATA.nested_types_by_name['TestDataEntry']
_TESTCASEFULLRESPONSEDATA_CONSTRUCTORSCASEENTRY = _TESTCASEFULLRESPONSEDATA.nested_types_by_name['ConstructorsCaseEntry']
_QUERYTESTCASERESPONSEDTO = DESCRIPTOR.message_types_by_name['QueryTestCaseResponseDto']
_UPDATETESTCASEDATA = DESCRIPTOR.message_types_by_name['UpdateTestCaseData']
_UPDATETESTCASERESPONSEDTO = DESCRIPTOR.message_types_by_name['UpdateTestCaseResponseDto']
_DELETETESTCASEDTO = DESCRIPTOR.message_types_by_name['DeleteTestCaseDto']
_TESTCASEASSERTSRESPONSEDTO = DESCRIPTOR.message_types_by_name['TestCaseAssertsResponseDto']
_CUSTOMDTO = DESCRIPTOR.message_types_by_name['CustomDto']
_CONSTRUCTORINDEXDTO = DESCRIPTOR.message_types_by_name['ConstructorIndexDto']
_LISTCONSTRUCTORINDEXDTO = DESCRIPTOR.message_types_by_name['ListConstructorIndexDto']
_QUERYCONSTRUCTORTREEDTO = DESCRIPTOR.message_types_by_name['QueryConstructorTreeDto']
_CONSTRUCTORTREE = DESCRIPTOR.message_types_by_name['ConstructorTree']
_QUERYCONSTRUCTORTREERESPONSE = DESCRIPTOR.message_types_by_name['QueryConstructorTreeResponse']
_QUERYCONSTRUCTORRESPONSE = DESCRIPTOR.message_types_by_name['QueryConstructorResponse']
_LISTCONSTRUCTORDTO = DESCRIPTOR.message_types_by_name['ListConstructorDto']
_CONSTRUCTORRESPONSETREE = DESCRIPTOR.message_types_by_name['ConstructorResponseTree']
_LISTCONSTRUCTORRESPONSE = DESCRIPTOR.message_types_by_name['ListConstructorResponse']
_TESTREPORTMODEL = DESCRIPTOR.message_types_by_name['TestReportModel']
_TESTRESULT = DESCRIPTOR.message_types_by_name['TestResult']
_QUERYREPORTDATA = DESCRIPTOR.message_types_by_name['QueryReportData']
_QUERYREPORTRESPONSE = DESCRIPTOR.message_types_by_name['QueryReportResponse']
_LISTREPORTDTO = DESCRIPTOR.message_types_by_name['ListReportDto']
_LISTREPORTDATA = DESCRIPTOR.message_types_by_name['ListReportData']
_LISTREPORTRESPONSE = DESCRIPTOR.message_types_by_name['ListReportResponse']
_QUERYXMINDRESPONSE = DESCRIPTOR.message_types_by_name['QueryXmindResponse']
_QUERYXMINDDATA = DESCRIPTOR.message_types_by_name['QueryXmindData']
_TESTPLANCASEDTO = DESCRIPTOR.message_types_by_name['TestPlanCaseDto']
_TESTPLANTREERESPONSE = DESCRIPTOR.message_types_by_name['TestPlanTreeResponse']
_TESTPLANTREEDATA = DESCRIPTOR.message_types_by_name['TestPlanTreeData']
_TESTPLANTREEDATA_CASEMAPENTRY = _TESTPLANTREEDATA.nested_types_by_name['CaseMapEntry']
_TESTCASEDIRDTO = DESCRIPTOR.message_types_by_name['TestCaseDirDto']
_TESTCASEDATARESPONSE = DESCRIPTOR.message_types_by_name['TestCaseDataResponse']
_MOVETESTCASEDTO = DESCRIPTOR.message_types_by_name['MoveTestCaseDto']
_BATCHUPDATEOUTPARAMETERSDTO = DESCRIPTOR.message_types_by_name['BatchUpdateOutParametersDto']
_BATCHUPDATEOUTPARAMETERSRESPONSE = DESCRIPTOR.message_types_by_name['BatchUpdateOutParametersResponse']
_REQUESTINFO = DESCRIPTOR.message_types_by_name['RequestInfo']
_REQUESTINFO_REQUESTHEADERSENTRY = _REQUESTINFO.nested_types_by_name['RequestHeadersEntry']
_REQUESTINFO_RESPONSEHEADERSENTRY = _REQUESTINFO.nested_types_by_name['ResponseHeadersEntry']
_REQUESTINFO_COOKIESENTRY = _REQUESTINFO.nested_types_by_name['CookiesEntry']
_REQUESTINFO_REQUESTCOOKIESENTRY = _REQUESTINFO.nested_types_by_name['RequestCookiesEntry']
_TESTCASEGENERATORDTO = DESCRIPTOR.message_types_by_name['TestCaseGeneratorDto']
_TESTCASEGENERATERESPONSE = DESCRIPTOR.message_types_by_name['TestCaseGenerateResponse']
_IMPORTCASEDTO = DESCRIPTOR.message_types_by_name['ImportCaseDto']
_IMPORTTESTCASERESPONSE = DESCRIPTOR.message_types_by_name['ImportTestCaseResponse']
_LISTTESTPLANDTO = DESCRIPTOR.message_types_by_name['ListTestPlanDto']
_TESTPLANMODEL = DESCRIPTOR.message_types_by_name['TestPlanModel']
_LISTTESTPLANDATA = DESCRIPTOR.message_types_by_name['ListTestPlanData']
_LISTTESTPLANRESPONSE = DESCRIPTOR.message_types_by_name['ListTestPlanResponse']
_TESTPLANDTO = DESCRIPTOR.message_types_by_name['TestPlanDto']
_SWITCHTESTPLANDTO = DESCRIPTOR.message_types_by_name['SwitchTestPlanDto']
_QUERYFOLLOWPLANDATA = DESCRIPTOR.message_types_by_name['QueryFollowPlanData']
_QUERYFOLLOWPLANRESPONSE = DESCRIPTOR.message_types_by_name['QueryFollowPlanResponse']
ListTestCaseDto = _reflection.GeneratedProtocolMessageType('ListTestCaseDto', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTCASEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListTestCaseDto)
  })
_sym_db.RegisterMessage(ListTestCaseDto)

TestCaseModel = _reflection.GeneratedProtocolMessageType('TestCaseModel', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEMODEL,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseModel)
  })
_sym_db.RegisterMessage(TestCaseModel)

ListTestCaseResponse = _reflection.GeneratedProtocolMessageType('ListTestCaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTCASERESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListTestCaseResponse)
  })
_sym_db.RegisterMessage(ListTestCaseResponse)

TestCaseDto = _reflection.GeneratedProtocolMessageType('TestCaseDto', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseDto)
  })
_sym_db.RegisterMessage(TestCaseDto)

TestCaseOutParametersDto = _reflection.GeneratedProtocolMessageType('TestCaseOutParametersDto', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEOUTPARAMETERSDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseOutParametersDto)
  })
_sym_db.RegisterMessage(TestCaseOutParametersDto)

TestCaseOutParametersResponse = _reflection.GeneratedProtocolMessageType('TestCaseOutParametersResponse', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEOUTPARAMETERSRESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseOutParametersResponse)
  })
_sym_db.RegisterMessage(TestCaseOutParametersResponse)

InsertTestCaseResponseDto = _reflection.GeneratedProtocolMessageType('InsertTestCaseResponseDto', (_message.Message,), {
  'DESCRIPTOR' : _INSERTTESTCASERESPONSEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:InsertTestCaseResponseDto)
  })
_sym_db.RegisterMessage(InsertTestCaseResponseDto)

TestCaseAssertsDto = _reflection.GeneratedProtocolMessageType('TestCaseAssertsDto', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEASSERTSDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseAssertsDto)
  })
_sym_db.RegisterMessage(TestCaseAssertsDto)

TestCaseDataDto = _reflection.GeneratedProtocolMessageType('TestCaseDataDto', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEDATADTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseDataDto)
  })
_sym_db.RegisterMessage(TestCaseDataDto)

ConstructorDto = _reflection.GeneratedProtocolMessageType('ConstructorDto', (_message.Message,), {
  'DESCRIPTOR' : _CONSTRUCTORDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ConstructorDto)
  })
_sym_db.RegisterMessage(ConstructorDto)

TestCaseInfoDto = _reflection.GeneratedProtocolMessageType('TestCaseInfoDto', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEINFODTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseInfoDto)
  })
_sym_db.RegisterMessage(TestCaseInfoDto)

TestCaseResponse = _reflection.GeneratedProtocolMessageType('TestCaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASERESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseResponse)
  })
_sym_db.RegisterMessage(TestCaseResponse)

TestCaseRequest = _reflection.GeneratedProtocolMessageType('TestCaseRequest', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEREQUEST,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseRequest)
  })
_sym_db.RegisterMessage(TestCaseRequest)

QueryTestCaseDirTree = _reflection.GeneratedProtocolMessageType('QueryTestCaseDirTree', (_message.Message,), {
  'DESCRIPTOR' : _QUERYTESTCASEDIRTREE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryTestCaseDirTree)
  })
_sym_db.RegisterMessage(QueryTestCaseDirTree)

QueryTestCaseDir = _reflection.GeneratedProtocolMessageType('QueryTestCaseDir', (_message.Message,), {
  'DESCRIPTOR' : _QUERYTESTCASEDIR,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryTestCaseDir)
  })
_sym_db.RegisterMessage(QueryTestCaseDir)

TestCaseTree = _reflection.GeneratedProtocolMessageType('TestCaseTree', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASETREE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseTree)
  })
_sym_db.RegisterMessage(TestCaseTree)

QueryTestCaseDirTreeResponse = _reflection.GeneratedProtocolMessageType('QueryTestCaseDirTreeResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYTESTCASEDIRTREERESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryTestCaseDirTreeResponse)
  })
_sym_db.RegisterMessage(QueryTestCaseDirTreeResponse)

TestCaseDirectoryModel = _reflection.GeneratedProtocolMessageType('TestCaseDirectoryModel', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEDIRECTORYMODEL,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseDirectoryModel)
  })
_sym_db.RegisterMessage(TestCaseDirectoryModel)

QueryTestCaseDirectoryResponseDto = _reflection.GeneratedProtocolMessageType('QueryTestCaseDirectoryResponseDto', (_message.Message,), {
  'DESCRIPTOR' : _QUERYTESTCASEDIRECTORYRESPONSEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryTestCaseDirectoryResponseDto)
  })
_sym_db.RegisterMessage(QueryTestCaseDirectoryResponseDto)

QueryTestCaseDto = _reflection.GeneratedProtocolMessageType('QueryTestCaseDto', (_message.Message,), {
  'DESCRIPTOR' : _QUERYTESTCASEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryTestCaseDto)
  })
_sym_db.RegisterMessage(QueryTestCaseDto)

TestCaseAssertsModel = _reflection.GeneratedProtocolMessageType('TestCaseAssertsModel', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEASSERTSMODEL,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseAssertsModel)
  })
_sym_db.RegisterMessage(TestCaseAssertsModel)

TestCaseConstructorModel = _reflection.GeneratedProtocolMessageType('TestCaseConstructorModel', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASECONSTRUCTORMODEL,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseConstructorModel)
  })
_sym_db.RegisterMessage(TestCaseConstructorModel)

TestCaseDataModel = _reflection.GeneratedProtocolMessageType('TestCaseDataModel', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEDATAMODEL,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseDataModel)
  })
_sym_db.RegisterMessage(TestCaseDataModel)

TestCaseOutParametersModel = _reflection.GeneratedProtocolMessageType('TestCaseOutParametersModel', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEOUTPARAMETERSMODEL,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseOutParametersModel)
  })
_sym_db.RegisterMessage(TestCaseOutParametersModel)

ListTestCaseDataModel = _reflection.GeneratedProtocolMessageType('ListTestCaseDataModel', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTCASEDATAMODEL,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListTestCaseDataModel)
  })
_sym_db.RegisterMessage(ListTestCaseDataModel)

TestCaseFullResponseData = _reflection.GeneratedProtocolMessageType('TestCaseFullResponseData', (_message.Message,), {

  'TestDataEntry' : _reflection.GeneratedProtocolMessageType('TestDataEntry', (_message.Message,), {
    'DESCRIPTOR' : _TESTCASEFULLRESPONSEDATA_TESTDATAENTRY,
    '__module__' : 'testcase_pb2'
    # @@protoc_insertion_point(class_scope:TestCaseFullResponseData.TestDataEntry)
    })
  ,

  'ConstructorsCaseEntry' : _reflection.GeneratedProtocolMessageType('ConstructorsCaseEntry', (_message.Message,), {
    'DESCRIPTOR' : _TESTCASEFULLRESPONSEDATA_CONSTRUCTORSCASEENTRY,
    '__module__' : 'testcase_pb2'
    # @@protoc_insertion_point(class_scope:TestCaseFullResponseData.ConstructorsCaseEntry)
    })
  ,
  'DESCRIPTOR' : _TESTCASEFULLRESPONSEDATA,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseFullResponseData)
  })
_sym_db.RegisterMessage(TestCaseFullResponseData)
_sym_db.RegisterMessage(TestCaseFullResponseData.TestDataEntry)
_sym_db.RegisterMessage(TestCaseFullResponseData.ConstructorsCaseEntry)

QueryTestCaseResponseDto = _reflection.GeneratedProtocolMessageType('QueryTestCaseResponseDto', (_message.Message,), {
  'DESCRIPTOR' : _QUERYTESTCASERESPONSEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryTestCaseResponseDto)
  })
_sym_db.RegisterMessage(QueryTestCaseResponseDto)

UpdateTestCaseData = _reflection.GeneratedProtocolMessageType('UpdateTestCaseData', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTCASEDATA,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:UpdateTestCaseData)
  })
_sym_db.RegisterMessage(UpdateTestCaseData)

UpdateTestCaseResponseDto = _reflection.GeneratedProtocolMessageType('UpdateTestCaseResponseDto', (_message.Message,), {
  'DESCRIPTOR' : _UPDATETESTCASERESPONSEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:UpdateTestCaseResponseDto)
  })
_sym_db.RegisterMessage(UpdateTestCaseResponseDto)

DeleteTestCaseDto = _reflection.GeneratedProtocolMessageType('DeleteTestCaseDto', (_message.Message,), {
  'DESCRIPTOR' : _DELETETESTCASEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:DeleteTestCaseDto)
  })
_sym_db.RegisterMessage(DeleteTestCaseDto)

TestCaseAssertsResponseDto = _reflection.GeneratedProtocolMessageType('TestCaseAssertsResponseDto', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEASSERTSRESPONSEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseAssertsResponseDto)
  })
_sym_db.RegisterMessage(TestCaseAssertsResponseDto)

CustomDto = _reflection.GeneratedProtocolMessageType('CustomDto', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:CustomDto)
  })
_sym_db.RegisterMessage(CustomDto)

ConstructorIndexDto = _reflection.GeneratedProtocolMessageType('ConstructorIndexDto', (_message.Message,), {
  'DESCRIPTOR' : _CONSTRUCTORINDEXDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ConstructorIndexDto)
  })
_sym_db.RegisterMessage(ConstructorIndexDto)

ListConstructorIndexDto = _reflection.GeneratedProtocolMessageType('ListConstructorIndexDto', (_message.Message,), {
  'DESCRIPTOR' : _LISTCONSTRUCTORINDEXDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListConstructorIndexDto)
  })
_sym_db.RegisterMessage(ListConstructorIndexDto)

QueryConstructorTreeDto = _reflection.GeneratedProtocolMessageType('QueryConstructorTreeDto', (_message.Message,), {
  'DESCRIPTOR' : _QUERYCONSTRUCTORTREEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryConstructorTreeDto)
  })
_sym_db.RegisterMessage(QueryConstructorTreeDto)

ConstructorTree = _reflection.GeneratedProtocolMessageType('ConstructorTree', (_message.Message,), {
  'DESCRIPTOR' : _CONSTRUCTORTREE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ConstructorTree)
  })
_sym_db.RegisterMessage(ConstructorTree)

QueryConstructorTreeResponse = _reflection.GeneratedProtocolMessageType('QueryConstructorTreeResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYCONSTRUCTORTREERESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryConstructorTreeResponse)
  })
_sym_db.RegisterMessage(QueryConstructorTreeResponse)

QueryConstructorResponse = _reflection.GeneratedProtocolMessageType('QueryConstructorResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYCONSTRUCTORRESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryConstructorResponse)
  })
_sym_db.RegisterMessage(QueryConstructorResponse)

ListConstructorDto = _reflection.GeneratedProtocolMessageType('ListConstructorDto', (_message.Message,), {
  'DESCRIPTOR' : _LISTCONSTRUCTORDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListConstructorDto)
  })
_sym_db.RegisterMessage(ListConstructorDto)

ConstructorResponseTree = _reflection.GeneratedProtocolMessageType('ConstructorResponseTree', (_message.Message,), {
  'DESCRIPTOR' : _CONSTRUCTORRESPONSETREE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ConstructorResponseTree)
  })
_sym_db.RegisterMessage(ConstructorResponseTree)

ListConstructorResponse = _reflection.GeneratedProtocolMessageType('ListConstructorResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTCONSTRUCTORRESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListConstructorResponse)
  })
_sym_db.RegisterMessage(ListConstructorResponse)

TestReportModel = _reflection.GeneratedProtocolMessageType('TestReportModel', (_message.Message,), {
  'DESCRIPTOR' : _TESTREPORTMODEL,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestReportModel)
  })
_sym_db.RegisterMessage(TestReportModel)

TestResult = _reflection.GeneratedProtocolMessageType('TestResult', (_message.Message,), {
  'DESCRIPTOR' : _TESTRESULT,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestResult)
  })
_sym_db.RegisterMessage(TestResult)

QueryReportData = _reflection.GeneratedProtocolMessageType('QueryReportData', (_message.Message,), {
  'DESCRIPTOR' : _QUERYREPORTDATA,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryReportData)
  })
_sym_db.RegisterMessage(QueryReportData)

QueryReportResponse = _reflection.GeneratedProtocolMessageType('QueryReportResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYREPORTRESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryReportResponse)
  })
_sym_db.RegisterMessage(QueryReportResponse)

ListReportDto = _reflection.GeneratedProtocolMessageType('ListReportDto', (_message.Message,), {
  'DESCRIPTOR' : _LISTREPORTDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListReportDto)
  })
_sym_db.RegisterMessage(ListReportDto)

ListReportData = _reflection.GeneratedProtocolMessageType('ListReportData', (_message.Message,), {
  'DESCRIPTOR' : _LISTREPORTDATA,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListReportData)
  })
_sym_db.RegisterMessage(ListReportData)

ListReportResponse = _reflection.GeneratedProtocolMessageType('ListReportResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTREPORTRESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListReportResponse)
  })
_sym_db.RegisterMessage(ListReportResponse)

QueryXmindResponse = _reflection.GeneratedProtocolMessageType('QueryXmindResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYXMINDRESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryXmindResponse)
  })
_sym_db.RegisterMessage(QueryXmindResponse)

QueryXmindData = _reflection.GeneratedProtocolMessageType('QueryXmindData', (_message.Message,), {
  'DESCRIPTOR' : _QUERYXMINDDATA,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryXmindData)
  })
_sym_db.RegisterMessage(QueryXmindData)

TestPlanCaseDto = _reflection.GeneratedProtocolMessageType('TestPlanCaseDto', (_message.Message,), {
  'DESCRIPTOR' : _TESTPLANCASEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestPlanCaseDto)
  })
_sym_db.RegisterMessage(TestPlanCaseDto)

TestPlanTreeResponse = _reflection.GeneratedProtocolMessageType('TestPlanTreeResponse', (_message.Message,), {
  'DESCRIPTOR' : _TESTPLANTREERESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestPlanTreeResponse)
  })
_sym_db.RegisterMessage(TestPlanTreeResponse)

TestPlanTreeData = _reflection.GeneratedProtocolMessageType('TestPlanTreeData', (_message.Message,), {

  'CaseMapEntry' : _reflection.GeneratedProtocolMessageType('CaseMapEntry', (_message.Message,), {
    'DESCRIPTOR' : _TESTPLANTREEDATA_CASEMAPENTRY,
    '__module__' : 'testcase_pb2'
    # @@protoc_insertion_point(class_scope:TestPlanTreeData.CaseMapEntry)
    })
  ,
  'DESCRIPTOR' : _TESTPLANTREEDATA,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestPlanTreeData)
  })
_sym_db.RegisterMessage(TestPlanTreeData)
_sym_db.RegisterMessage(TestPlanTreeData.CaseMapEntry)

TestCaseDirDto = _reflection.GeneratedProtocolMessageType('TestCaseDirDto', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEDIRDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseDirDto)
  })
_sym_db.RegisterMessage(TestCaseDirDto)

TestCaseDataResponse = _reflection.GeneratedProtocolMessageType('TestCaseDataResponse', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEDATARESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseDataResponse)
  })
_sym_db.RegisterMessage(TestCaseDataResponse)

MoveTestCaseDto = _reflection.GeneratedProtocolMessageType('MoveTestCaseDto', (_message.Message,), {
  'DESCRIPTOR' : _MOVETESTCASEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:MoveTestCaseDto)
  })
_sym_db.RegisterMessage(MoveTestCaseDto)

BatchUpdateOutParametersDto = _reflection.GeneratedProtocolMessageType('BatchUpdateOutParametersDto', (_message.Message,), {
  'DESCRIPTOR' : _BATCHUPDATEOUTPARAMETERSDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:BatchUpdateOutParametersDto)
  })
_sym_db.RegisterMessage(BatchUpdateOutParametersDto)

BatchUpdateOutParametersResponse = _reflection.GeneratedProtocolMessageType('BatchUpdateOutParametersResponse', (_message.Message,), {
  'DESCRIPTOR' : _BATCHUPDATEOUTPARAMETERSRESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:BatchUpdateOutParametersResponse)
  })
_sym_db.RegisterMessage(BatchUpdateOutParametersResponse)

RequestInfo = _reflection.GeneratedProtocolMessageType('RequestInfo', (_message.Message,), {

  'RequestHeadersEntry' : _reflection.GeneratedProtocolMessageType('RequestHeadersEntry', (_message.Message,), {
    'DESCRIPTOR' : _REQUESTINFO_REQUESTHEADERSENTRY,
    '__module__' : 'testcase_pb2'
    # @@protoc_insertion_point(class_scope:RequestInfo.RequestHeadersEntry)
    })
  ,

  'ResponseHeadersEntry' : _reflection.GeneratedProtocolMessageType('ResponseHeadersEntry', (_message.Message,), {
    'DESCRIPTOR' : _REQUESTINFO_RESPONSEHEADERSENTRY,
    '__module__' : 'testcase_pb2'
    # @@protoc_insertion_point(class_scope:RequestInfo.ResponseHeadersEntry)
    })
  ,

  'CookiesEntry' : _reflection.GeneratedProtocolMessageType('CookiesEntry', (_message.Message,), {
    'DESCRIPTOR' : _REQUESTINFO_COOKIESENTRY,
    '__module__' : 'testcase_pb2'
    # @@protoc_insertion_point(class_scope:RequestInfo.CookiesEntry)
    })
  ,

  'RequestCookiesEntry' : _reflection.GeneratedProtocolMessageType('RequestCookiesEntry', (_message.Message,), {
    'DESCRIPTOR' : _REQUESTINFO_REQUESTCOOKIESENTRY,
    '__module__' : 'testcase_pb2'
    # @@protoc_insertion_point(class_scope:RequestInfo.RequestCookiesEntry)
    })
  ,
  'DESCRIPTOR' : _REQUESTINFO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:RequestInfo)
  })
_sym_db.RegisterMessage(RequestInfo)
_sym_db.RegisterMessage(RequestInfo.RequestHeadersEntry)
_sym_db.RegisterMessage(RequestInfo.ResponseHeadersEntry)
_sym_db.RegisterMessage(RequestInfo.CookiesEntry)
_sym_db.RegisterMessage(RequestInfo.RequestCookiesEntry)

TestCaseGeneratorDto = _reflection.GeneratedProtocolMessageType('TestCaseGeneratorDto', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEGENERATORDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseGeneratorDto)
  })
_sym_db.RegisterMessage(TestCaseGeneratorDto)

TestCaseGenerateResponse = _reflection.GeneratedProtocolMessageType('TestCaseGenerateResponse', (_message.Message,), {
  'DESCRIPTOR' : _TESTCASEGENERATERESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestCaseGenerateResponse)
  })
_sym_db.RegisterMessage(TestCaseGenerateResponse)

ImportCaseDto = _reflection.GeneratedProtocolMessageType('ImportCaseDto', (_message.Message,), {
  'DESCRIPTOR' : _IMPORTCASEDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ImportCaseDto)
  })
_sym_db.RegisterMessage(ImportCaseDto)

ImportTestCaseResponse = _reflection.GeneratedProtocolMessageType('ImportTestCaseResponse', (_message.Message,), {
  'DESCRIPTOR' : _IMPORTTESTCASERESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ImportTestCaseResponse)
  })
_sym_db.RegisterMessage(ImportTestCaseResponse)

ListTestPlanDto = _reflection.GeneratedProtocolMessageType('ListTestPlanDto', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTPLANDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListTestPlanDto)
  })
_sym_db.RegisterMessage(ListTestPlanDto)

TestPlanModel = _reflection.GeneratedProtocolMessageType('TestPlanModel', (_message.Message,), {
  'DESCRIPTOR' : _TESTPLANMODEL,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestPlanModel)
  })
_sym_db.RegisterMessage(TestPlanModel)

ListTestPlanData = _reflection.GeneratedProtocolMessageType('ListTestPlanData', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTPLANDATA,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListTestPlanData)
  })
_sym_db.RegisterMessage(ListTestPlanData)

ListTestPlanResponse = _reflection.GeneratedProtocolMessageType('ListTestPlanResponse', (_message.Message,), {
  'DESCRIPTOR' : _LISTTESTPLANRESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:ListTestPlanResponse)
  })
_sym_db.RegisterMessage(ListTestPlanResponse)

TestPlanDto = _reflection.GeneratedProtocolMessageType('TestPlanDto', (_message.Message,), {
  'DESCRIPTOR' : _TESTPLANDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:TestPlanDto)
  })
_sym_db.RegisterMessage(TestPlanDto)

SwitchTestPlanDto = _reflection.GeneratedProtocolMessageType('SwitchTestPlanDto', (_message.Message,), {
  'DESCRIPTOR' : _SWITCHTESTPLANDTO,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:SwitchTestPlanDto)
  })
_sym_db.RegisterMessage(SwitchTestPlanDto)

QueryFollowPlanData = _reflection.GeneratedProtocolMessageType('QueryFollowPlanData', (_message.Message,), {
  'DESCRIPTOR' : _QUERYFOLLOWPLANDATA,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryFollowPlanData)
  })
_sym_db.RegisterMessage(QueryFollowPlanData)

QueryFollowPlanResponse = _reflection.GeneratedProtocolMessageType('QueryFollowPlanResponse', (_message.Message,), {
  'DESCRIPTOR' : _QUERYFOLLOWPLANRESPONSE,
  '__module__' : 'testcase_pb2'
  # @@protoc_insertion_point(class_scope:QueryFollowPlanResponse)
  })
_sym_db.RegisterMessage(QueryFollowPlanResponse)

_TESTCASE = DESCRIPTOR.services_by_name['testcase']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TESTCASEFULLRESPONSEDATA_TESTDATAENTRY._options = None
  _TESTCASEFULLRESPONSEDATA_TESTDATAENTRY._serialized_options = b'8\001'
  _TESTCASEFULLRESPONSEDATA_CONSTRUCTORSCASEENTRY._options = None
  _TESTCASEFULLRESPONSEDATA_CONSTRUCTORSCASEENTRY._serialized_options = b'8\001'
  _TESTPLANTREEDATA_CASEMAPENTRY._options = None
  _TESTPLANTREEDATA_CASEMAPENTRY._serialized_options = b'8\001'
  _REQUESTINFO_REQUESTHEADERSENTRY._options = None
  _REQUESTINFO_REQUESTHEADERSENTRY._serialized_options = b'8\001'
  _REQUESTINFO_RESPONSEHEADERSENTRY._options = None
  _REQUESTINFO_RESPONSEHEADERSENTRY._serialized_options = b'8\001'
  _REQUESTINFO_COOKIESENTRY._options = None
  _REQUESTINFO_COOKIESENTRY._serialized_options = b'8\001'
  _REQUESTINFO_REQUESTCOOKIESENTRY._options = None
  _REQUESTINFO_REQUESTCOOKIESENTRY._serialized_options = b'8\001'
  _LISTTESTCASEDTO._serialized_start=19
  _LISTTESTCASEDTO._serialized_end=150
  _TESTCASEMODEL._serialized_start=153
  _TESTCASEMODEL._serialized_end=500
  _LISTTESTCASERESPONSE._serialized_start=502
  _LISTTESTCASERESPONSE._serialized_end=581
  _TESTCASEDTO._serialized_start=584
  _TESTCASEDTO._serialized_end=1086
  _TESTCASEOUTPARAMETERSDTO._serialized_start=1089
  _TESTCASEOUTPARAMETERSDTO._serialized_end=1267
  _TESTCASEOUTPARAMETERSRESPONSE._serialized_start=1269
  _TESTCASEOUTPARAMETERSRESPONSE._serialized_end=1370
  _INSERTTESTCASERESPONSEDTO._serialized_start=1372
  _INSERTTESTCASERESPONSEDTO._serialized_end=1440
  _TESTCASEASSERTSDTO._serialized_start=1443
  _TESTCASEASSERTSDTO._serialized_end=1613
  _TESTCASEDATADTO._serialized_start=1615
  _TESTCASEDATADTO._serialized_end=1736
  _CONSTRUCTORDTO._serialized_start=1739
  _CONSTRUCTORDTO._serialized_end=2037
  _TESTCASEINFODTO._serialized_start=2040
  _TESTCASEINFODTO._serialized_end=2220
  _TESTCASERESPONSE._serialized_start=2222
  _TESTCASERESPONSE._serialized_end=2295
  _TESTCASEREQUEST._serialized_start=2297
  _TESTCASEREQUEST._serialized_end=2335
  _QUERYTESTCASEDIRTREE._serialized_start=2337
  _QUERYTESTCASEDIRTREE._serialized_end=2407
  _QUERYTESTCASEDIR._serialized_start=2409
  _QUERYTESTCASEDIR._serialized_end=2449
  _TESTCASETREE._serialized_start=2451
  _TESTCASETREE._serialized_end=2562
  _QUERYTESTCASEDIRTREERESPONSE._serialized_start=2564
  _QUERYTESTCASEDIRTREERESPONSE._serialized_end=2650
  _TESTCASEDIRECTORYMODEL._serialized_start=2653
  _TESTCASEDIRECTORYMODEL._serialized_end=2837
  _QUERYTESTCASEDIRECTORYRESPONSEDTO._serialized_start=2839
  _QUERYTESTCASEDIRECTORYRESPONSEDTO._serialized_end=2940
  _QUERYTESTCASEDTO._serialized_start=2942
  _QUERYTESTCASEDTO._serialized_end=2977
  _TESTCASEASSERTSMODEL._serialized_start=2980
  _TESTCASEASSERTSMODEL._serialized_end=3184
  _TESTCASECONSTRUCTORMODEL._serialized_start=3187
  _TESTCASECONSTRUCTORMODEL._serialized_end=3471
  _TESTCASEDATAMODEL._serialized_start=3474
  _TESTCASEDATAMODEL._serialized_end=3650
  _TESTCASEOUTPARAMETERSMODEL._serialized_start=3653
  _TESTCASEOUTPARAMETERSMODEL._serialized_end=3904
  _LISTTESTCASEDATAMODEL._serialized_start=3906
  _LISTTESTCASEDATAMODEL._serialized_end=3968
  _TESTCASEFULLRESPONSEDATA._serialized_start=3971
  _TESTCASEFULLRESPONSEDATA._serialized_end=4451
  _TESTCASEFULLRESPONSEDATA_TESTDATAENTRY._serialized_start=4307
  _TESTCASEFULLRESPONSEDATA_TESTDATAENTRY._serialized_end=4378
  _TESTCASEFULLRESPONSEDATA_CONSTRUCTORSCASEENTRY._serialized_start=4380
  _TESTCASEFULLRESPONSEDATA_CONSTRUCTORSCASEENTRY._serialized_end=4451
  _QUERYTESTCASERESPONSEDTO._serialized_start=4453
  _QUERYTESTCASERESPONSEDTO._serialized_end=4547
  _UPDATETESTCASEDATA._serialized_start=4549
  _UPDATETESTCASEDATA._serialized_end=4657
  _UPDATETESTCASERESPONSEDTO._serialized_start=4659
  _UPDATETESTCASERESPONSEDTO._serialized_end=4748
  _DELETETESTCASEDTO._serialized_start=4750
  _DELETETESTCASEDTO._serialized_end=4783
  _TESTCASEASSERTSRESPONSEDTO._serialized_start=4785
  _TESTCASEASSERTSRESPONSEDTO._serialized_end=4877
  _CUSTOMDTO._serialized_start=4879
  _CUSTOMDTO._serialized_end=4902
  _CONSTRUCTORINDEXDTO._serialized_start=4904
  _CONSTRUCTORINDEXDTO._serialized_end=4952
  _LISTCONSTRUCTORINDEXDTO._serialized_start=4954
  _LISTCONSTRUCTORINDEXDTO._serialized_end=5015
  _QUERYCONSTRUCTORTREEDTO._serialized_start=5017
  _QUERYCONSTRUCTORTREEDTO._serialized_end=5086
  _CONSTRUCTORTREE._serialized_start=5089
  _CONSTRUCTORTREE._serialized_end=5236
  _QUERYCONSTRUCTORTREERESPONSE._serialized_start=5238
  _QUERYCONSTRUCTORTREERESPONSE._serialized_end=5327
  _QUERYCONSTRUCTORRESPONSE._serialized_start=5329
  _QUERYCONSTRUCTORRESPONSE._serialized_end=5423
  _LISTCONSTRUCTORDTO._serialized_start=5425
  _LISTCONSTRUCTORDTO._serialized_end=5529
  _CONSTRUCTORRESPONSETREE._serialized_start=5532
  _CONSTRUCTORRESPONSETREE._serialized_end=5749
  _LISTCONSTRUCTORRESPONSE._serialized_start=5751
  _LISTCONSTRUCTORRESPONSE._serialized_end=5843
  _TESTREPORTMODEL._serialized_start=5846
  _TESTREPORTMODEL._serialized_end=6256
  _TESTRESULT._serialized_start=6259
  _TESTRESULT._serialized_end=6856
  _QUERYREPORTDATA._serialized_start=6858
  _QUERYREPORTDATA._serialized_end=6960
  _QUERYREPORTRESPONSE._serialized_start=6962
  _QUERYREPORTRESPONSE._serialized_end=7056
  _LISTREPORTDTO._serialized_start=7059
  _LISTREPORTDTO._serialized_end=7204
  _LISTREPORTDATA._serialized_start=7206
  _LISTREPORTDATA._serialized_end=7284
  _LISTREPORTRESPONSE._serialized_start=7286
  _LISTREPORTRESPONSE._serialized_end=7364
  _QUERYXMINDRESPONSE._serialized_start=7366
  _QUERYXMINDRESPONSE._serialized_end=7444
  _QUERYXMINDDATA._serialized_start=7446
  _QUERYXMINDDATA._serialized_end=7564
  _TESTPLANCASEDTO._serialized_start=7566
  _TESTPLANCASEDTO._serialized_end=7603
  _TESTPLANTREERESPONSE._serialized_start=7605
  _TESTPLANTREERESPONSE._serialized_end=7687
  _TESTPLANTREEDATA._serialized_start=7690
  _TESTPLANTREEDATA._serialized_end=7835
  _TESTPLANTREEDATA_CASEMAPENTRY._serialized_start=7789
  _TESTPLANTREEDATA_CASEMAPENTRY._serialized_end=7835
  _TESTCASEDIRDTO._serialized_start=7837
  _TESTCASEDIRDTO._serialized_end=7943
  _TESTCASEDATARESPONSE._serialized_start=7945
  _TESTCASEDATARESPONSE._serialized_end=8028
  _MOVETESTCASEDTO._serialized_start=8030
  _MOVETESTCASEDTO._serialized_end=8106
  _BATCHUPDATEOUTPARAMETERSDTO._serialized_start=8108
  _BATCHUPDATEOUTPARAMETERSDTO._serialized_end=8195
  _BATCHUPDATEOUTPARAMETERSRESPONSE._serialized_start=8197
  _BATCHUPDATEOUTPARAMETERSRESPONSE._serialized_end=8301
  _REQUESTINFO._serialized_start=8304
  _REQUESTINFO._serialized_end=8892
  _REQUESTINFO_REQUESTHEADERSENTRY._serialized_start=8650
  _REQUESTINFO_REQUESTHEADERSENTRY._serialized_end=8703
  _REQUESTINFO_RESPONSEHEADERSENTRY._serialized_start=8705
  _REQUESTINFO_RESPONSEHEADERSENTRY._serialized_end=8759
  _REQUESTINFO_COOKIESENTRY._serialized_start=8761
  _REQUESTINFO_COOKIESENTRY._serialized_end=8807
  _REQUESTINFO_REQUESTCOOKIESENTRY._serialized_start=8809
  _REQUESTINFO_REQUESTCOOKIESENTRY._serialized_end=8862
  _TESTCASEGENERATORDTO._serialized_start=8894
  _TESTCASEGENERATORDTO._serialized_end=8984
  _TESTCASEGENERATERESPONSE._serialized_start=8986
  _TESTCASEGENERATERESPONSE._serialized_end=9071
  _IMPORTCASEDTO._serialized_start=9073
  _IMPORTCASEDTO._serialized_end=9144
  _IMPORTTESTCASERESPONSE._serialized_start=9146
  _IMPORTTESTCASERESPONSE._serialized_end=9225
  _LISTTESTPLANDTO._serialized_start=9228
  _LISTTESTPLANDTO._serialized_end=9451
  _TESTPLANMODEL._serialized_start=9454
  _TESTPLANMODEL._serialized_end=9877
  _LISTTESTPLANDATA._serialized_start=9879
  _LISTTESTPLANDATA._serialized_end=9942
  _LISTTESTPLANRESPONSE._serialized_start=9944
  _LISTTESTPLANRESPONSE._serialized_end=10024
  _TESTPLANDTO._serialized_start=10027
  _TESTPLANDTO._serialized_end=10293
  _SWITCHTESTPLANDTO._serialized_start=10295
  _SWITCHTESTPLANDTO._serialized_end=10358
  _QUERYFOLLOWPLANDATA._serialized_start=10360
  _QUERYFOLLOWPLANDATA._serialized_end=10445
  _QUERYFOLLOWPLANRESPONSE._serialized_start=10447
  _QUERYFOLLOWPLANRESPONSE._serialized_end=10535
  _TESTCASE._serialized_start=10538
  _TESTCASE._serialized_end=13489
# @@protoc_insertion_point(module_scope)
